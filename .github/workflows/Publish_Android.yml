name: Build & Publish Android Apps
on: push

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache Ruby - Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/
          key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper/
          key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Grant Permission to Execute
        run: cd android && chmod +x gradlew

      - name: Build with Gradle
        id: build
        run: ./gradlew build

      - name: Build Release AAB
        id: bundleDebug
        run: ./gradlew bundleDebug

#      - name: Sign App Bundle
#        id: sign_app
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: android/app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
#          alias: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
#          keyStorePassword: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
#
#      - name: Create Google store key.json
#        id: createServiceAccount
#        run: echo '${{ secrets.GOOGLE_STORE_KEY_JSON }}' > key.json

      - name: Deploy to Play Store (BETA)
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.package
          releaseFile: app/build/outputs/bundle/release/app-release.aab
          track: beta
          whatsNewDirectory: whatsnew/

